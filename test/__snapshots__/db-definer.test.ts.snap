// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`my stack test Snapshot test 1`] = `
Object {
  "Outputs": Object {
    "DBDBInitCommand05F2F7CD": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws lambda invoke --function-name ",
            Object {
              "Ref": "DBDbDefiner53C1CCFA",
            },
            " --payload '{\\"command\\":\\"init\\"}' --cli-binary-format raw-in-base64-out res.txt",
          ],
        ],
      },
    },
    "DBDBLoginCommand92CF7324": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "PGPASSWORD=<DB Password from Secret Manager>       psql -h ",
            Object {
              "Fn::GetAtt": Array [
                "DBAuroraCluster6C1914EB",
                "Endpoint.Address",
              ],
            },
            "       -U postgres prototype",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "DBAuroraCluster6C1914EB": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql13",
        "DBSubnetGroupName": Object {
          "Ref": "DBAuroraClusterSubnets6F7FAD49",
        },
        "DatabaseName": "prototype",
        "Engine": "aurora-postgresql",
        "EngineVersion": "13.7",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "DBAuroraClusterSecret7FC04250",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "DBAuroraClusterSecret7FC04250",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 5432,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "DBAuroraClusterSecurityGroup0B50A54B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DBAuroraClusterInstance137198F02": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VpcdbSubnet1RouteTableAssociation3FF66701",
        "VpcdbSubnet2RouteTableAssociation3D000840",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DBAuroraCluster6C1914EB",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBSubnetGroupName": Object {
          "Ref": "DBAuroraClusterSubnets6F7FAD49",
        },
        "Engine": "aurora-postgresql",
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraClusterSecret7FC04250": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"postgres\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DBAuroraClusterSecretAttachment0EBC6996": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "DBAuroraClusterSecret7FC04250",
        },
        "TargetId": Object {
          "Ref": "DBAuroraCluster6C1914EB",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DBAuroraClusterSecurityGroup0B50A54B": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBAuroraClusterSecurityGroupfromIndirectPeerIndirectPortFF42F222": Object {
      "Properties": Object {
        "CidrIp": Object {
          "Fn::GetAtt": Array [
            "Vpc8378EB38",
            "CidrBlock",
          ],
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "from ",
              Object {
                "Fn::GetAtt": Array [
                  "Vpc8378EB38",
                  "CidrBlock",
                ],
              },
              ":{IndirectPort}",
            ],
          ],
        },
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DBAuroraCluster6C1914EB",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DBAuroraClusterSecurityGroup0B50A54B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DBAuroraCluster6C1914EB",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBAuroraClusterSecurityGroupfromMyTestStackDBBastionServerInstanceSecurityGroupD5D89E00543245163BF3": Object {
      "Properties": Object {
        "Description": "from MyTestStackDBBastionServerInstanceSecurityGroupD5D89E00:5432",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DBAuroraClusterSecurityGroup0B50A54B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "DBBastionServerInstanceSecurityGroup36090C4D",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBAuroraClusterSubnets6F7FAD49": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcdbSubnet1Subnet1B82B149",
          },
          Object {
            "Ref": "VpcdbSubnet2Subnet01192A3B",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DBBastionServer351B9E67": Object {
      "DependsOn": Array [
        "DBBastionServerRole9B3FF55D",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": Object {
          "Ref": "DBBastionServerInstanceProfile10C2C688",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "DBBastionServerInstanceSecurityGroup36090C4D",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VpcbastionSubnet1SubnetCFE27063",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/DB/BastionServer",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
amazon-linux-extras install postgresql13 -y",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "DBBastionServerInstanceProfile10C2C688": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "DBBastionServerRole9B3FF55D",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "DBBastionServerInstanceSecurityGroup36090C4D": Object {
      "Properties": Object {
        "GroupDescription": "MyTestStack/DB/BastionServer/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/DB/BastionServer",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBBastionServerRole9B3FF55D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DBDbDefiner53C1CCFA": Object {
      "DependsOn": Array [
        "DBDbDefinerServiceRoleDefaultPolicyD749A5B1",
        "DBDbDefinerServiceRole0A183E3A",
        "VpcbastionSubnet1DefaultRoute1C54CE7B",
        "VpcbastionSubnet1RouteTableAssociation2AA5F991",
        "VpcbastionSubnet2DefaultRoute35A88F91",
        "VpcbastionSubnet2RouteTableAssociationC6221FF8",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:6eca664af32ef677e5736a388f869a2cc7f8f5161a9a657a6052ddc9cbd23c62",
          },
        },
        "Environment": Object {
          "Variables": Object {
            "DB_ENGINE_FAMILY": "POSTGRESQL",
            "DB_NAME": "prototype",
            "DB_SECRET_NAME": Object {
              "Fn::Join": Array [
                "-",
                Array [
                  Object {
                    "Fn::Select": Array [
                      0,
                      Object {
                        "Fn::Split": Array [
                          "-",
                          Object {
                            "Fn::Select": Array [
                              6,
                              Object {
                                "Fn::Split": Array [
                                  ":",
                                  Object {
                                    "Ref": "DBAuroraClusterSecret7FC04250",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "-",
                          Object {
                            "Fn::Select": Array [
                              6,
                              Object {
                                "Fn::Split": Array [
                                  ":",
                                  Object {
                                    "Ref": "DBAuroraClusterSecret7FC04250",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
        },
        "MemorySize": 256,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DBDbDefinerServiceRole0A183E3A",
            "Arn",
          ],
        },
        "Timeout": 300,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DBDbDefinerSecurityGroupB9883C5F",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "VpcbastionSubnet1SubnetCFE27063",
            },
            Object {
              "Ref": "VpcbastionSubnet2Subnet969CBA4E",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DBDbDefinerSecurityGroupB9883C5F": Object {
      "DependsOn": Array [
        "VpcbastionSubnet1DefaultRoute1C54CE7B",
        "VpcbastionSubnet1RouteTableAssociation2AA5F991",
        "VpcbastionSubnet2DefaultRoute35A88F91",
        "VpcbastionSubnet2RouteTableAssociationC6221FF8",
      ],
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function MyTestStackDBDbDefinerAE96A2A5",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBDbDefinerServiceRole0A183E3A": Object {
      "DependsOn": Array [
        "VpcbastionSubnet1DefaultRoute1C54CE7B",
        "VpcbastionSubnet1RouteTableAssociation2AA5F991",
        "VpcbastionSubnet2DefaultRoute35A88F91",
        "VpcbastionSubnet2RouteTableAssociationC6221FF8",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DBDbDefinerServiceRoleDefaultPolicyD749A5B1": Object {
      "DependsOn": Array [
        "VpcbastionSubnet1DefaultRoute1C54CE7B",
        "VpcbastionSubnet1RouteTableAssociation2AA5F991",
        "VpcbastionSubnet2DefaultRoute35A88F91",
        "VpcbastionSubnet2RouteTableAssociationC6221FF8",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DBAuroraClusterSecretAttachment0EBC6996",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DBDbDefinerServiceRoleDefaultPolicyD749A5B1",
        "Roles": Array [
          Object {
            "Ref": "DBDbDefinerServiceRole0A183E3A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DBVpcEndpointC4B3F5A0": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "DBVpcEndpointSecurityGroupFF7ED50F",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".secretsmanager",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcbastionSubnet1SubnetCFE27063",
          },
          Object {
            "Ref": "VpcbastionSubnet2Subnet969CBA4E",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "DBVpcEndpointSecurityGroupFF7ED50F": Object {
      "Properties": Object {
        "GroupDescription": "MyTestStack/DB/VpcEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcbastionSubnet1DefaultRoute1C54CE7B": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcpublicSubnet1NATGatewayA036E8A6",
        },
        "RouteTableId": Object {
          "Ref": "VpcbastionSubnet1RouteTableD8FE3867",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcbastionSubnet1RouteTableAssociation2AA5F991": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcbastionSubnet1RouteTableD8FE3867",
        },
        "SubnetId": Object {
          "Ref": "VpcbastionSubnet1SubnetCFE27063",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcbastionSubnet1RouteTableD8FE3867": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/bastionSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcbastionSubnet1SubnetCFE27063": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "bastion",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/bastionSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcbastionSubnet2DefaultRoute35A88F91": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcpublicSubnet2NATGateway4A29FD4F",
        },
        "RouteTableId": Object {
          "Ref": "VpcbastionSubnet2RouteTableD847E523",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcbastionSubnet2RouteTableAssociationC6221FF8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcbastionSubnet2RouteTableD847E523",
        },
        "SubnetId": Object {
          "Ref": "VpcbastionSubnet2Subnet969CBA4E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcbastionSubnet2RouteTableD847E523": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/bastionSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcbastionSubnet2Subnet969CBA4E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "bastion",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/bastionSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdbSubnet1RouteTable04184FDD": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/dbSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdbSubnet1RouteTableAssociation3FF66701": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcdbSubnet1RouteTable04184FDD",
        },
        "SubnetId": Object {
          "Ref": "VpcdbSubnet1Subnet1B82B149",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdbSubnet1Subnet1B82B149": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "db",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/dbSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdbSubnet2RouteTable7BBEF14D": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/dbSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdbSubnet2RouteTableAssociation3D000840": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcdbSubnet2RouteTable7BBEF14D",
        },
        "SubnetId": Object {
          "Ref": "VpcdbSubnet2Subnet01192A3B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdbSubnet2Subnet01192A3B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "db",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/dbSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet1EIP411541E6": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet1NATGatewayA036E8A6": Object {
      "DependsOn": Array [
        "VpcpublicSubnet1DefaultRouteB88F9E93",
        "VpcpublicSubnet1RouteTableAssociation4E83B6E4",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcpublicSubnet1EIP411541E6",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet1RouteTable15C15F8E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet1Subnet2BB74ED7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet2EIP811E07A7": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet2NATGateway4A29FD4F": Object {
      "DependsOn": Array [
        "VpcpublicSubnet2DefaultRoute732F0BEB",
        "VpcpublicSubnet2RouteTableAssociationCCE257FF",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcpublicSubnet2EIP811E07A7",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet2SubnetE34B022A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
